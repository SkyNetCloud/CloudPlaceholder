plugins {
    id 'net.minecraftforge.gradle' version '5.1.+'
    id "com.github.breadmoirai.github-release" version "2.4.1"
}


group = 'ca.skynetcloud'
version = '0.2.1'


java {
    archivesBaseName = 'cloudplaceholder'
    toolchain.languageVersion = JavaLanguageVersion.of(11)
}

minecraft {

    mappings channel: 'snapshot', version: '20210309-1.16.5'

    runs {
        client {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'



            property 'forge.logging.console.level', 'debug'


            mods {
                cloudplaceholder {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'

            property 'forge.logging.console.level', 'debug'


            mods {
                cloudplaceholder {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'

            property 'forge.logging.console.level', 'debug'

            // Specify the modid for data generation, where to output the resulting resource, and where to look for existing resources.
            args '--mod', 'cloudplaceholder', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')

            mods {
                cloudplaceholder {
                    source sourceSets.main
                }
            }
        }
    }
}

// Include resources generated by data generators.
sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
    maven {
        name = 'placeholderapi'
        url = 'https://repo.extendedclip.com/content/repositories/placeholderapi/'
    }
    maven {
        url = 'https://hub.spigotmc.org/nexus/content/repositories/snapshots/'

        // As of Gradle 5.1, you can limit this to only those
        // dependencies you expect from it
        content {
            includeGroup 'org.bukkit'
            includeGroup 'org.spigotmc'
        }
    }
    maven { url = 'https://oss.sonatype.org/content/repositories/snapshots' }
    maven { url = 'https://oss.sonatype.org/content/repositories/central' }

    ivy {
        name = 'Pixelmon Reforged'
        url "https://download.nodecdn.net/containers/reforged/server/release"
        metadataSources {
            artifact()
        }
        patternLayout {
            artifact "[revision]/[artifact].[ext]"
        }
    }
    jcenter()

}

dependencies {
    minecraft 'net.minecraftforge:forge:1.16.5-36.2.39'

    compileOnly 'me.clip:placeholderapi:2.9.2'
    compileOnly 'org.spigotmc:spigot-api:1.16.5-R0.1-SNAPSHOT'

    compileOnly 'pixelmon:Pixelmon-1.16.5-9.1.2-server:9.1.2'

}


task gitupload {
    doFirst {
        build
    }
    doLast{
        githubRelease
    }
}

githubRelease {
    token project.getProperty('git-token') // This is your personal access token with Repo permissions

    owner "SkyNetCloud"
    repo "CloudPlaceholder" // by default this is set to your project name
    tagName "v${project.version}" // by default this is set to "v${project.version}"
    targetCommitish "master" // by default this is set to "main"
    releaseName "v${project.version}" // Release title, by default this is the same as the tagName
    generateReleaseNotes false // Generate release notes automatically, if true and body is present, body will be prepended, if name is not given, one will be generated by the tag
    body "**Full Changelog**: https://github.com/SkyNetCloud/CloudPlaceholder/compare/v${project.getProperty('old_version')}...v${project.version}."
    draft false // by default this is true
    prerelease false // by default this is false
    releaseAssets.from('build/libs')

    FilenameFilter filter = { dir, filename -> filename.contains(project.version) }
    releaseAssets = jar.destinationDir.listFiles filter
    allowUploadToExisting.set false // Setting this to true will allow this plugin to upload artifacts to a release if it found an existing one. If overwrite is set to true, this option is ignored.
    overwrite true // by default false; if set to true, will delete an existing release with the same tag and name
    dryRun false // by default false; you can use this to see what actions would be taken without making a release
    apiEndpoint "https://api.github.com" // should only change for github enterprise users
    client // This is the okhttp client used for http requests
}



