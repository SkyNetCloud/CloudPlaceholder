plugins {
    id 'net.minecraftforge.gradle' version '5.1.+'
}


group = 'ca.skynetcloud'
version = '0.1.2'

java {
    archivesBaseName = 'cloudplaceholder'
    toolchain.languageVersion = JavaLanguageVersion.of(11)
}

minecraft {

    mappings channel: 'snapshot', version: '20210309-1.16.5'

    runs {
        client {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'



            property 'forge.logging.console.level', 'debug'


            mods {
                cloudplaceholder {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'

            property 'forge.logging.console.level', 'debug'


            mods {
                cloudplaceholder {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'

            property 'forge.logging.console.level', 'debug'

            // Specify the modid for data generation, where to output the resulting resource, and where to look for existing resources.
            args '--mod', 'cloudplaceholder', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')

            mods {
                cloudplaceholder {
                    source sourceSets.main
                }
            }
        }
    }
}

// Include resources generated by data generators.
sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
    maven {
        name = 'placeholderapi'
        url = 'https://repo.extendedclip.com/content/repositories/placeholderapi/'
    }
    maven {
        url = 'https://hub.spigotmc.org/nexus/content/repositories/snapshots/'

        // As of Gradle 5.1, you can limit this to only those
        // dependencies you expect from it
        content {
            includeGroup 'org.bukkit'
            includeGroup 'org.spigotmc'
        }
    }
    maven { url = 'https://oss.sonatype.org/content/repositories/snapshots' }
    maven { url = 'https://oss.sonatype.org/content/repositories/central' }

    ivy {
        name = 'Pixelmon Reforged'
        url "https://download.nodecdn.net/containers/reforged/server/release"
        metadataSources {
            artifact()
        }
        patternLayout {
            artifact "[revision]/[artifact].[ext]"
        }
    }
    jcenter()

}

dependencies {
    minecraft 'net.minecraftforge:forge:1.16.5-36.2.39'

    compileOnly 'me.clip:placeholderapi:2.9.2'
    compileOnly 'org.spigotmc:spigot-api:1.16.5-R0.1-SNAPSHOT'

    compileOnly 'pixelmon:Pixelmon-1.16.5-9.1.2-server:9.1.2'

}

// Example for how to get properties into the manifest for reading at runtime.
jar {
    manifest {
        attributes([
                "Specification-Title"     : "cloudplaceholder",
                //"Specification-Vendor": "cloudplaceholder authors",
                "Specification-Version"   : "1", // We are version 1 of ourselves
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : project.jar.archiveVersion,
                //"Implementation-Vendor": "cloudplaceholder authors",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

jar.finalizedBy('reobfJar')

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8' // Use the UTF-8 charset for Java compilation
}
